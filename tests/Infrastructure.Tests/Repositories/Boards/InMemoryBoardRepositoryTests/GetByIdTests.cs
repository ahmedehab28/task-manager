using Domain.Entities.Boards;
using FluentAssertions;
using Infrastructure.Repositories.Boards;
using Infrastructure.Tests.Repositories.Boards.InMemoryBoardRepositoryTests.Shared;

namespace Infrastructure.Tests.Repositories.Boards.InMemoryBoardRepositoryTests
{
    public class GetByIdTests
    {
        [Fact]
        public void GetById_WithValidIdAndRepoWithOneBoard_ShouldReturnBoard()
        {
            // Arrange
            Board board = new("Board Title");
            var _repository = new InMemoryBoardRepositoryBuilder()
                .WithCustomBoard(board)
                .Build();

            // Act
            Board? result = _repository.GetById(board.Id);

            // Assert
            result!.Id.Should().Be(result.Id);
            result!.Title.Should().Be(board.Title);
            result!.Description.Should().Be(board.Description);
            result!.CreatedAt.Should().Be(board.CreatedAt);
        }

        [Fact]
        public void GetById_WithValidIdAndRepoWithMoreThanOneBoard_ShouldReturnBoard()
        {
            // Arrange
            Board board = new("Board To GetById");
            var _repository = new InMemoryBoardRepositoryBuilder()
                .WithAutoGeneratedBoards(5)
                .WithCustomBoard(board)
                .Build();

            // Act
            Board result = _repository.GetById(board.Id)!;


            // Assertion
            result!.Title.Should().Be(board.Title);
        }

        [Fact]
        public void GetById_WithInvalidId_ShouldReturnNull()
        {
            // Arrange
            var _repository = new InMemoryBoardRepositoryBuilder()
                .WithAutoGeneratedBoards(5)
                .Build();

            // Act
            var result = _repository.GetById(Guid.Empty);

            // Assertion
            result.Should().BeNull();
        }

        [Fact]
        public void GetById_WithNonExistingId_ShouldReturnNull()
        {
            // Arrange
            var _repository = new InMemoryBoardRepositoryBuilder()
                .WithAutoGeneratedBoards(4)
                .Build();

            // Act
            var result = _repository.GetById(Guid.NewGuid());

            // Assertion
            result.Should().BeNull();

        }
    }
}
