

using Domain.Entities.Boards;
using FluentAssertions;
using Infrastructure.Tests.Repositories.Boards.InMemoryBoardRepositoryTests.Shared;

namespace Infrastructure.Tests.Repositories.Boards.InMemoryBoardRepositoryTests
{
    public class GetAllTests
    {
        [Fact]
        public void GetAll_WithEmptyBoardsList_ShouldReturnEmptyList()
        {
            // Arrange
            var repository = new InMemoryBoardRepositoryBuilder().Build();

            // Act
            var result = repository.GetAll();

            // Assertion
            result.Should().BeEmpty();
        }

        [Fact]
        public void GetAll_WithBoardsInList_ShouldReturnListOfBoards()
        {
            // Arrange
            Board customBoard = new("My Custom Board Title");
            var repository = new InMemoryBoardRepositoryBuilder()
                .WithAutoGeneratedBoards(5)
                .WithCustomBoard(customBoard)
                .Build();

            // Act
            var result = repository.GetAll();

            // Assertion
            result.Should().HaveCount(6);
            result.Should().Contain(customBoard);

        }
    }
}
