

//using Domain.Entities;
//using FluentAssertions;
//using Infrastructure.Tests.Repositories.Boards.InMemoryBoardRepositoryTests.Shared;

//namespace Infrastructure.Tests.Repositories.Boards.InMemoryBoardRepositoryTests
//{
//    public class GetAllTests
//    {
//        [Fact]
//        public async Task GetAll_WithEmptyBoardsList_ShouldReturnEmptyList()
//        {
//            // Arrange
//            var repository = await new InMemoryBoardRepositoryBuilder().Build();

//            // Act
//            var result = await repository.GetAllAsync();

//            // Assertion
//            result.Should().BeEmpty();
//        }

//        [Fact]
//        public async Task GetAll_WithBoardsInList_ShouldReturnListOfBoards()
//        {
//            // Arrange
//            Board customBoard = new("My Custom Board Title");
//            var repository = await new InMemoryBoardRepositoryBuilder()
//                .WithAutoGeneratedBoards(5)
//                .WithCustomBoard(customBoard)
//                .Build();

//            // Act
//            var result = await repository.GetAllAsync();

//            // Assertion
//            result.Should().HaveCount(6);
//            result.Should().Contain(customBoard);

//        }
//    }
//}
