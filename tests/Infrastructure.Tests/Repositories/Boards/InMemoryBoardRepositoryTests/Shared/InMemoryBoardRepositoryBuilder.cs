

using Domain.Entities.Boards;
using Infrastructure.Repositories.Boards;

namespace Infrastructure.Tests.Repositories.Boards.InMemoryBoardRepositoryTests.Shared
{
    public class InMemoryBoardRepositoryBuilder
    {
        private readonly List<Board> _boards = [];
        private int _autoGeneratedBoards = 0;

        public InMemoryBoardRepositoryBuilder WithCustomBoard(Board board)
        {
            _boards.Add(board);
            return this;
        }

        public InMemoryBoardRepositoryBuilder WithCustomBoards(List<Board> boards)
        {
            _boards.AddRange(boards);
            return this;
        }

        public InMemoryBoardRepositoryBuilder WithAutoGeneratedBoards(int count)
        {
            _autoGeneratedBoards = count;
            return this;
        }

        public InMemoryBoardRepository Build()
        {
            InMemoryBoardRepository repo = new();
            var allBoards = new List<Board>(_boards);
            for (int i = 1; i<=_autoGeneratedBoards; i++)
            {
                allBoards.Add(new Board($"Board{i} Title"));
            }

            foreach (Board board in allBoards)
            {
                repo.Add(board);
            }

            return repo;
        }
    }
}
